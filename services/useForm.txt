События Реакт - аналог DOM События
1) События Реакт только в камелКейсе
2) В jsx мы передаем фцию как обработчик события вместо строки <button onClick={handleCLick} />

Пути работы с Формами
1. Самостоятельно:
+ прямая работа с событиями
- сложность
- нужно следить за состоянием формы и писать свою валидацию
2. Библиотека
+ простое использование
- дополнительный порок вхождения (вся команда должна уметь работать с этой библиотекой)
- дополнительная зависимость (влияет негативно на оптимизацию)

Управляемые и неуправляемые Компоненты
Управляемые - компонента значение которых контролируется(управляется) state компонента. Это означает что если мы возьмем обычный html input то это будет неуправляемый компонент, потому что значение этого инпута будет хранится в ДОМ дереве, в отличие от нашего компонента Rating где его стейт хранится в Компонента Рейтинг

Есть две основные библиотеки для работы с формами: Formik и React Hook Form
И та и та очень хороши, но Антон сказал что для работы с Хуками вторая чуточку по лучше по этому остановимся на ней 

React Hook Form - useState
const {
    register, --> регистрация управляемого и неуправляемого компонента
    control,
    handleSubmit, --> событие отправки формы
    formState: { --> состояние формы
        errors,
        submitCount,
        isDirty,
        isSubmitSuccessful,
        isSubmitted,
        isSubmitting,
        isValid,
        isValidating
    },
    setError, --> Установка ошибки
    setValue, --> Установка значение
    setFocus, --> Установка фокуса
    watch, --> Подписка на изменение
    clearErrors, -> очистка ошибки
    reset, -> сброс формы
    trigger, -> триггер события
    unregister, -> удаление регистрации
    getValues -> получение значений
} = useForm<Inputs>()

Посмотри как мы можем заргестрировать управляемый и неуправляемый компонент
Не управляемые компоненты: 
<Input 
    placeholder='имя'
    {...register('name', { required: { value: true, message: 'Имя обязательно' } })}
/>
'name' - имя поля
required - условие валидации
message - сообщение ошибки

Управляемые компоненты:
<Controller 
    control={control}
    render={({ field }) => (
        <input {...field} />
    )}
    name='rating'
/>
Controller - компонент контроллера
render - метод рендера
field - это как раз то состояние onChange, onBlur - то чем управляет наш Контроллер
<input /> - оборачиваемый компонент
name - имя поля